(()=>{"use strict";const t=32,e=128;var a;!function(t){t[t.NORTH=0]="NORTH",t[t.NORTHEAST=45]="NORTHEAST",t[t.EAST=90]="EAST",t[t.SOUTHEAST=135]="SOUTHEAST",t[t.SOUTH=180]="SOUTH",t[t.SOUTHWEST=225]="SOUTHWEST",t[t.WEST=270]="WEST",t[t.NORTHWEST=315]="NORTHWEST"}(a||(a={}));const i={GRASS:65280,WATER:255,ORE:16776960,TANK:16711680,INFANTRY:255,HARVESTER:16711935,BASE:8421504,BARRACKS:9127187,EXPLOSION:16753920},s={TANK:{health:100,damage:20,range:3,speed:100,turnSpeed:90},INFANTRY:{health:50,damage:10,range:2,speed:80,turnSpeed:180},HARVESTER:{health:75,speed:60,capacity:100,turnSpeed:60}},n={GRASS:1,WATER:0,ORE:.7},o=io();class r extends Phaser.Scene{constructor(){super("MainMenu"),this.soundOn=!0,console.log("MainMenu constructor called")}preload(){console.log("MainMenu preload started"),this.load.audio("bgm","assets/bgm.mp3")}create(){console.log("MainMenu create started"),this.cameras.main.setBackgroundColor("#222222");const t=this.cameras.main.width/2,e=this.cameras.main.height/2;this.add.text(t,e-100,"Red Alert 25",{fontSize:"48px",color:"#ffffff",fontFamily:'"Press Start 2P", cursive',backgroundColor:"#ff0000",padding:{x:20,y:10}}).setOrigin(.5);const a=this.add.text(t,e,"Play Multiplayer",{fontSize:"32px",color:"#ffffff",backgroundColor:"#006400",padding:{x:20,y:10},fontFamily:'"Press Start 2P", cursive'}).setOrigin(.5).setInteractive({useHandCursor:!0});a.on("pointerover",(()=>a.setStyle({backgroundColor:"#008000"}))),a.on("pointerout",(()=>a.setStyle({backgroundColor:"#006400"}))),a.on("pointerdown",(()=>{console.log("Joining matchmaking"),o.emit("joinMatchmaking"),a.setVisible(!1),this.findingGameText=this.add.text(t,e,"Finding Players...",{fontSize:"24px",color:"#ffffff",backgroundColor:"#000066",padding:{x:20,y:10},fontFamily:'"Press Start 2P", cursive'}).setOrigin(.5)}));const i=this.add.text(t,e+100,"Sound: On",{fontSize:"32px",color:"#ffffff",backgroundColor:"#000066",padding:{x:20,y:10},fontFamily:'"Press Start 2P", cursive'}).setOrigin(.5).setInteractive({useHandCursor:!0});this.add.text(10,10,"Debug: MainMenu Active",{fontSize:"16px",color:"#ffffff"}),this.soundOn=!0,this.bgm=this.sound.add("bgm",{loop:!0}),i.on("pointerdown",(()=>{this.soundOn=!this.soundOn,i.setText("Sound: "+(this.soundOn?"On":"Off")),this.bgm&&(this.soundOn?this.bgm.play():this.bgm.stop())})),o.on("matchmakingStarted",(()=>{console.log("Matchmaking started")})),o.on("gameCreated",(({gameId:t,players:e})=>{console.log(`Game created: ${t} with ${e.length} players`),this.scene.start("GameScene",{gameId:t})}))}}class l extends Phaser.Scene{constructor(){super("GameScene"),this.map=[],this.units=[],this.selectedUnit=null,this.resources=1e3,this.minimapCanvas=null,this.minimapContext=null,this.minimapContainer=null,this.resourceDisplay=null,this.controlPanel=null,this.buildButton=null,this.attackButton=null,this.harvestButton=null,this.currentMode="normal",this.gameId=null,this.inLobby=!0}init(t){t.gameId&&(this.gameId=t.gameId)}preload(){this.load.image("grass","assets/grass.png"),this.load.image("ore","assets/ore.png"),this.load.image("tank","assets/tank.png")}create(){console.log("GameScene create started"),this.inLobby=!0,this.cameras.main.setBackgroundColor("#222222");const t=this.cameras.main.width/2,e=this.cameras.main.height/2;this.gameId?(this.add.text(t,e-50,"Waiting for Players...",{fontSize:"24px",color:"#ffffff",fontFamily:'"Press Start 2P", cursive',backgroundColor:"#000066",padding:{x:20,y:10}}).setOrigin(.5),this.add.text(t,e,`Game ID: ${this.gameId}`,{fontSize:"16px",color:"#ffffff",fontFamily:'"Press Start 2P", cursive'}).setOrigin(.5),o.on("lobbyUpdate",(({players:t})=>{this.showLobbyUI(t)})),o.on("gameStart",(t=>{this.inLobby=!1,this.startGame(t)})),o.on("unitMoved",(t=>{this.inLobby||this.handleRemoteUnitMovement(t)}))):(this.add.text(t,e,"Error: No game found",{fontSize:"24px",color:"#ffffff",fontFamily:'"Press Start 2P", cursive',backgroundColor:"#ff0000",padding:{x:20,y:10}}).setOrigin(.5),this.add.text(t,e+100,"Return to Menu",{fontSize:"20px",color:"#ffffff",backgroundColor:"#006400",padding:{x:20,y:10},fontFamily:'"Press Start 2P", cursive'}).setOrigin(.5).setInteractive({useHandCursor:!0}).on("pointerdown",(()=>{this.scene.start("MainMenu")})))}showLobbyUI(t){if(!this.inLobby)return;this.children.removeAll();const e=this.cameras.main.width/2,a=this.cameras.main.height/2;this.add.text(e,50,"Red Alert 25 - Game Lobby",{fontSize:"24px",color:"#ffffff",fontFamily:'"Press Start 2P", cursive',backgroundColor:"#ff0000",padding:{x:20,y:10}}).setOrigin(.5),this.add.text(e,100,`Game ID: ${this.gameId}`,{fontSize:"16px",color:"#ffffff",fontFamily:'"Press Start 2P", cursive'}).setOrigin(.5),this.add.text(e,150,"Players:",{fontSize:"20px",color:"#ffffff",fontFamily:'"Press Start 2P", cursive'}).setOrigin(.5),t.forEach(((t,a)=>{const i=t.id===o.id;this.add.text(e,190+30*a,`${i?"â†’ ":""}${t.id.substring(0,6)} - ${t.team||"No Team"} ${t.ready?"(Ready)":""}`,{fontSize:"16px",color:i?"#ffff00":"#ffffff",fontFamily:'"Press Start 2P", cursive'}).setOrigin(.5)}));const i=this.add.text(e-100,a+100,"Join Allies",{fontSize:"16px",color:"#ffffff",backgroundColor:"#0000ff",padding:{x:10,y:5},fontFamily:'"Press Start 2P", cursive'}).setOrigin(.5).setInteractive({useHandCursor:!0}),s=this.add.text(e+100,a+100,"Join Soviets",{fontSize:"16px",color:"#ffffff",backgroundColor:"#ff0000",padding:{x:10,y:5},fontFamily:'"Press Start 2P", cursive'}).setOrigin(.5).setInteractive({useHandCursor:!0}),n=this.add.text(e,a+150,"Ready",{fontSize:"20px",color:"#ffffff",backgroundColor:"#006400",padding:{x:20,y:10},fontFamily:'"Press Start 2P", cursive'}).setOrigin(.5).setInteractive({useHandCursor:!0});i.on("pointerdown",(()=>{this.gameId&&o.emit("setTeam",{gameId:this.gameId,team:"ALLIES"})})),s.on("pointerdown",(()=>{this.gameId&&o.emit("setTeam",{gameId:this.gameId,team:"SOVIETS"})})),n.on("pointerdown",(()=>{this.gameId&&(o.emit("setReady",this.gameId),n.setStyle({backgroundColor:"#004400"}),n.setText("Waiting..."),n.disableInteractive())}))}startGame(a){this.children.removeAll(),this.createMap(),Object.entries(a.units).forEach((([a,n])=>{const r=this.add.rectangle(n.x*t+16,n.y*t+16,"INFANTRY"===n.type?16:25.6,"INFANTRY"===n.type?16:25.6,i[n.type]);r.setStrokeStyle(1,0),r.setInteractive(),r.setData("type","UNIT"),r.setData("unitType",n.type),r.setData("id",a),r.setData("originalColor",i[n.type]),r.setData("facing",n.facing),r.setAngle(n.facing),r.setData("gridX",n.x),r.setData("gridY",n.y),r.setData("owner",n.owner),n.owner===o.id&&r.setData("selectable",!0);const l=s[n.type];r.setData("health",l.health),r.setData("damage",l.damage||0),r.setData("range",l.range||1),r.setData("speed",l.speed),"HARVESTER"===n.type&&r.setData("capacity",l.capacity||100),this.units.push(r),n.x>=0&&n.x<e&&n.y>=0&&n.y<e&&this.map[n.x][n.y].setData("occupied",!0)})),this.setupHtmlMinimap(),this.updateMinimap(),this.resourceDisplay=document.getElementById("resource-display"),this.resourceDisplay?this.updateResourceDisplay():this.resourceText=this.add.text(10,10,`Resources: ${this.resources}`,{fontSize:"20px",color:"#ffffff"}).setDepth(1),this.setupControlPanel(),this.cameras.main.setBounds(0,0,4096,4096),this.cameras.main.setViewport(0,0,640,640),this.cameras.main.scrollX=1728,this.cameras.main.scrollY=1728,this.setupInput()}handleRemoteUnitMovement(a){const i=this.units.find((t=>t.getData("id")===a.id));if(i){const s=i.getData("unitType"),n=i.getData("gridX"),o=i.getData("gridY");if(a.duration<=0)return void console.log(`Skipping instant movement for unit ${a.id} (duration: ${a.duration})`);const r=i.getData("originalColor")||i.fillColor;n>=0&&n<e&&o>=0&&o<e&&this.map[n][o].setData("occupied",!1);const l=a.x*t+16,c=a.y*t+16;"INFANTRY"!==s&&a.turnDuration>0?this.tweens.add({targets:i,angle:a.facing,duration:a.turnDuration,ease:"Linear",onComplete:()=>{i.setData("facing",a.facing),i.setFillStyle(r),this.tweens.add({targets:i,x:l,y:c,duration:a.duration,ease:"Linear",onStart:()=>{i.setFillStyle(r),i.setVisible(!0)},onComplete:()=>{i.setData("gridX",a.x),i.setData("gridY",a.y),i.setFillStyle(r),i.setVisible(!0),a.x>=0&&a.x<e&&a.y>=0&&a.y<e&&this.map[a.x][a.y].setData("occupied",!0)}})}}):(i.setAngle(a.facing),i.setData("facing",a.facing),i.setFillStyle(r),i.setVisible(!0),this.tweens.add({targets:i,x:l,y:c,duration:a.duration,ease:"Linear",onStart:()=>{i.setFillStyle(r),i.setVisible(!0)},onComplete:()=>{i.setData("gridX",a.x),i.setData("gridY",a.y),i.setFillStyle(r),i.setVisible(!0),a.x>=0&&a.x<e&&a.y>=0&&a.y<e&&this.map[a.x][a.y].setData("occupied",!0)}}))}}isValidMove(t,a){if(t<0||a<0||t>=e||a>=e)return!1;const i=this.map[t][a];return"WATER"!==i.getData("type")&&!(!0===i.getData("occupied"))}createUnit(e,n,o){const r=this.add.rectangle(n*t+16,o*t+16,25.6,25.6,i[e]),l=`${e}_${Date.now()}_${Math.floor(1e3*Math.random())}`;r.setStrokeStyle(1,0),r.setInteractive(),r.setData("type","UNIT"),r.setData("unitType",e),r.setData("id",l),r.setData("originalColor",i[e]),r.setData("facing",a.NORTH),r.setAngle(a.NORTH),r.setData("gridX",n),r.setData("gridY",o);const c=s[e];return r.setData("health",c.health),r.setData("damage",c.damage||0),r.setData("range",c.range||1),r.setData("speed",c.speed),"HARVESTER"===e&&r.setData("capacity",c.capacity||100),this.map[n][o].setData("occupied",!0),this.units.push(r),console.log(`Client: Created unit ${e} with ID ${l} and color ${i[e].toString(16)}`),r}createBuilding(e,a,s){const n=this.add.rectangle(a*t+16,s*t+16,38.4,38.4,i[e]);return n.setStrokeStyle(1,0),n.setInteractive(),n.setData("type","BUILDING"),n.setData("buildingType",e),n.setData("id","building_"+Date.now().toString()),n.setData("health",200),this.map[a][s].setData("occupied",!0),n}moveUnit(a,i,r){const l=a.getData("unitType"),c=a.getData("gridX"),d=a.getData("gridY"),h=this.map[i][r].getData("type"),u=n[h],m=s[l].speed,g=s[l].turnSpeed||180,p=a.getData("originalColor")||a.fillColor;let f=Phaser.Math.Distance.Between(c,d,i,r)*t/(m*u)*1e3;const y=250;f<y&&(f=y);const S=this.calculateFacing(c,d,i,r),v=a.getData("facing"),D=Phaser.Math.Angle.ShortestBetween(v,S);let b=Math.abs(D)/g*1e3;b>0&&b<y&&(b=y),c>=0&&c<e&&d>=0&&d<e&&this.map[c][d].setData("occupied",!1),i>=0&&i<e&&r>=0&&r<e&&(this.units.some((t=>t!==a&&t.getData("gridX")===i&&t.getData("gridY")===r))||this.map[i][r].setData("occupied",!0));const x={id:a.getData("id"),x:i,y:r,facing:S,duration:f,turnDuration:b};o.emit("moveUnit",x),this.time.delayedCall(100,(()=>{"INFANTRY"!==l&&Math.abs(D)>5?this.tweens.add({targets:a,angle:S,duration:b,ease:"Linear",onComplete:()=>{a.setData("facing",S),a.setFillStyle(p),this.performMove(a,i,r,f)}}):(a.setAngle(S),a.setData("facing",S),a.setFillStyle(p),this.performMove(a,i,r,f))}))}performMove(e,a,i,s){const n=a*t+16,o=i*t+16,r=e.getData("originalColor")||e.fillColor;console.log(`performMove: Unit ${e.getData("id")} original color: ${r.toString(16)}`),e.setFillStyle(r),this.tweens.add({targets:e,x:n,y:o,duration:s,ease:"Linear",onStart:()=>{e.setFillStyle(r),console.log(`performMove onStart: Unit ${e.getData("id")} color: ${r.toString(16)}`)},onComplete:()=>{e.setData("gridX",a),e.setData("gridY",i),e.setFillStyle(r),e.setVisible(!0),console.log(`Client performMove complete: Unit ${e.getData("id")} at (${a},${i}) color: ${r.toString(16)}`)}})}calculateFacing(t,e,i,s){const n=Phaser.Math.Angle.Between(t,e,i,s),o=(Phaser.Math.RadToDeg(n)+360)%360;return o>=337.5||o<22.5?a.EAST:o>=22.5&&o<67.5?a.SOUTHEAST:o>=67.5&&o<112.5?a.SOUTH:o>=112.5&&o<157.5?a.SOUTHWEST:o>=157.5&&o<202.5?a.WEST:o>=202.5&&o<247.5?a.NORTHWEST:o>=247.5&&o<292.5?a.NORTH:a.NORTHEAST}handleResize(){console.log("GameScene handleResize called")}update(){this.units=this.units.filter((t=>{const e=t.getData("health");return t.active&&void 0!==e&&e>0}));const t=this.input.activePointer,e=this.cameras.main;(t.isDown||t.active)&&(t.x<50&&e.scrollX>0?e.scrollX-=5:t.x>590&&e.scrollX<3456&&(e.scrollX+=5),t.y<50&&e.scrollY>0?e.scrollY-=5:t.y>590&&e.scrollY<3456&&(e.scrollY+=5)),this.updateMinimap()}setupHtmlMinimap(){this.minimapContainer=document.getElementById("minimap-container"),this.minimapCanvas=document.getElementById("minimap-canvas"),this.minimapContainer&&this.minimapCanvas&&(this.minimapContainer.style.display="block",this.minimapContext=this.minimapCanvas.getContext("2d"),this.minimapCanvas.width=192,this.minimapCanvas.height=192,this.minimapCanvas.addEventListener("click",(t=>{const e=this.minimapCanvas.getBoundingClientRect(),a=t.clientX-e.left,i=t.clientY-e.top,s=4096*(a/this.minimapCanvas.width)-320,n=4096*(i/this.minimapCanvas.height)-320;this.cameras.main.scrollX=Math.max(0,Math.min(3456,s)),this.cameras.main.scrollY=Math.max(0,Math.min(3456,n))})))}cleanupMinimap(){this.minimapContainer&&(this.minimapContainer.style.display="none"),this.resourceDisplay&&(this.resourceDisplay.textContent=""),this.minimapCanvas&&this.minimapCanvas.removeEventListener("click",(()=>{}))}updateMinimap(){if(!this.minimapContext||!this.minimapCanvas)return;const a=this.minimapContext,s=1.5;a.clearRect(0,0,this.minimapCanvas.width,this.minimapCanvas.height),a.fillStyle="#333333",a.fillRect(0,0,192,192);for(let t=0;t<e;t++)for(let n=0;n<e;n++){const e=this.map[t][n].getData("type");a.fillStyle="#"+i[e].toString(16).padStart(6,"0"),a.globalAlpha=.7,a.fillRect(t*s,n*s,s,s)}a.globalAlpha=1,this.units.forEach((t=>{const e=t.getData("unitType"),n=t.getData("gridX"),o=t.getData("gridY");a.fillStyle="#"+i[e].toString(16).padStart(6,"0");a.fillRect(n*s-.5625,o*s-.5625,2.25,2.25)}));const n=this.cameras.main,o=n.scrollX/t*s,r=n.scrollY/t*s;a.strokeStyle="#ffffff",a.lineWidth=2,a.strokeRect(o,r,30,30)}updateResourceDisplay(){this.resourceDisplay?this.resourceDisplay.textContent=`Resources: ${this.resources}`:this.resourceText&&this.resourceText.setText(`Resources: ${this.resources}`)}harvest(t,e){this.resources+=50,this.updateResourceDisplay();const a=e.fillColor;e.setFillStyle(16777215),this.time.delayedCall(200,(()=>e.setFillStyle(a)))}setupControlPanel(){this.controlPanel=document.getElementById("control-panel"),this.buildButton=document.getElementById("build-button"),this.attackButton=document.getElementById("attack-button"),this.harvestButton=document.getElementById("harvest-button"),this.controlPanel&&(this.controlPanel.style.display="flex"),this.buildButton&&this.buildButton.addEventListener("click",(()=>this.setMode("build"))),this.attackButton&&this.attackButton.addEventListener("click",(()=>this.setMode("attack"))),this.harvestButton&&this.harvestButton.addEventListener("click",(()=>this.setMode("harvest"))),this.updateControlButtons()}updateControlButtons(){if(!this.selectedUnit)return this.buildButton&&this.buildButton.setAttribute("disabled","true"),this.attackButton&&this.attackButton.setAttribute("disabled","true"),void(this.harvestButton&&this.harvestButton.setAttribute("disabled","true"));const t=this.selectedUnit.getData("unitType");this.buildButton&&("INFANTRY"===t?this.buildButton.removeAttribute("disabled"):this.buildButton.setAttribute("disabled","true")),this.attackButton&&("TANK"===t||"INFANTRY"===t?this.attackButton.removeAttribute("disabled"):this.attackButton.setAttribute("disabled","true")),this.harvestButton&&("HARVESTER"===t?this.harvestButton.removeAttribute("disabled"):this.harvestButton.setAttribute("disabled","true"))}setMode(t){this.currentMode=t,this.buildButton&&(this.buildButton.style.backgroundColor="build"===t?"var(--ore-yellow)":"var(--allied-blue)",this.buildButton.style.color="build"===t?"var(--black)":"var(--white)"),this.attackButton&&(this.attackButton.style.backgroundColor="attack"===t?"var(--ore-yellow)":"var(--allied-blue)",this.attackButton.style.color="attack"===t?"var(--black)":"var(--white)"),this.harvestButton&&(this.harvestButton.style.backgroundColor="harvest"===t?"var(--ore-yellow)":"var(--allied-blue)",this.harvestButton.style.color="harvest"===t?"var(--black)":"var(--white)")}attackLocation(t,a,i){if(a<0||i<0||a>=e||i>=e)return;const s=this.units.find((e=>e.getData("gridX")===a&&e.getData("gridY")===i&&e!==t));if(s){const e=t.getData("gridX"),n=t.getData("gridY"),o=t.getData("range")||1;if(Phaser.Math.Distance.Between(e,n,a,i)>o){const r=Phaser.Math.Angle.Between(e,n,a,i),l=Math.round(a-Math.cos(r)*o),c=Math.round(i-Math.sin(r)*o);this.isValidMove(l,c)&&(this.moveUnit(t,l,c),this.time.delayedCall(1e3,(()=>{this.performAttack(t,s)})))}else this.performAttack(t,s)}}performAttack(t,e){const a=t.getData("damage")||10,i=e.getData("health")||0,s=Math.max(0,i-a);e.setData("health",s);const n=e.fillColor;e.setFillStyle(16711680),this.time.delayedCall(200,(()=>{if(s<=0){const t=this.units.indexOf(e);-1!==t&&this.units.splice(t,1),e.destroy()}else e.setFillStyle(n)}))}harvestLocation(t,a,i){if(a<0||i<0||a>=e||i>=e)return;const s=this.map[a][i];if("ORE"===s.getData("type")){const e=t.getData("gridX"),n=t.getData("gridY");if(Phaser.Math.Distance.Between(e,n,a,i)>1){const o=[{x:a+1,y:i},{x:a-1,y:i},{x:a,y:i+1},{x:a,y:i-1}].filter((t=>this.isValidMove(t.x,t.y)));if(o.length>0){const a=o.reduce(((t,a)=>Phaser.Math.Distance.Between(e,n,t.x,t.y)<Phaser.Math.Distance.Between(e,n,a.x,a.y)?t:a));this.moveUnit(t,a.x,a.y),this.time.delayedCall(1e3,(()=>{this.harvest(t,s)}))}}else this.harvest(t,s)}}buildStructure(t,e){!this.isValidMove(t,e)||this.resources<500||(this.resources-=500,this.updateResourceDisplay(),this.createBuilding("BARRACKS",t,e))}cleanupUI(){this.minimapContainer&&(this.minimapContainer.style.display="none"),this.resourceDisplay&&(this.resourceDisplay.textContent=""),this.controlPanel&&(this.controlPanel.style.display="none"),this.minimapCanvas&&this.minimapCanvas.removeEventListener("click",(()=>{})),this.buildButton&&this.buildButton.removeEventListener("click",(()=>{})),this.attackButton&&this.attackButton.removeEventListener("click",(()=>{})),this.harvestButton&&this.harvestButton.removeEventListener("click",(()=>{}))}createMap(){for(let a=0;a<e;a++){this.map[a]=[];for(let s=0;s<e;s++){const e=Math.random()<.1?"WATER":Math.random()<.15?"ORE":"GRASS",n=this.add.rectangle(a*t+16,s*t+16,t,t,i[e]);n.setStrokeStyle(1,0),n.setData("type",e),this.map[a][s]=n}}}setupInput(){this.events.on("shutdown",this.cleanupUI,this),this.input.on("gameobjectdown",((t,e)=>{"UNIT"===e.getData("type")&&e.getData("selectable")&&(this.selectedUnit&&this.selectedUnit.setStrokeStyle(1,0),this.selectedUnit=e,e.setStrokeStyle(2,16776960),this.updateControlButtons())})),this.input.on("pointerdown",(e=>{if(this.selectedUnit){const a=Math.floor((e.x+this.cameras.main.scrollX)/t),i=Math.floor((e.y+this.cameras.main.scrollY)/t);"normal"===this.currentMode&&this.isValidMove(a,i)?this.moveUnit(this.selectedUnit,a,i):"attack"===this.currentMode?this.attackLocation(this.selectedUnit,a,i):"harvest"===this.currentMode&&"HARVESTER"===this.selectedUnit.getData("unitType")?this.harvestLocation(this.selectedUnit,a,i):"build"===this.currentMode&&this.buildStructure(a,i),this.setMode("normal")}}))}}const c={type:Phaser.AUTO,width:640,height:640,scale:{mode:Phaser.Scale.FIT,autoCenter:Phaser.Scale.CENTER_BOTH,parent:"game-container",expandParent:!0},backgroundColor:"#333333",scene:[r,l],physics:{default:"arcade",arcade:{debug:!0}}};console.log("Creating Phaser game instance");const d=document.getElementById("game-container");d&&(d.style.display="block");const h=new Phaser.Game(c);"/play"===window.location.pathname?h.scene.start("GameScene"):h.scene.start("MainMenu"),window.addEventListener("resize",(()=>{h.scale.resize(window.innerWidth,window.innerHeight);const t=h.scene.getScene("GameScene");t&&t.scene.isActive()&&t.handleResize()}))})();